package org.nterlearning.datamodel.catalog.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the FeedReference service. Represents a row in the &quot;CATALOG_FeedReference&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.nterlearning.datamodel.catalog.model.impl.FeedReferenceModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.nterlearning.datamodel.catalog.model.impl.FeedReferenceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FeedReference
 * @see org.nterlearning.datamodel.catalog.model.impl.FeedReferenceImpl
 * @see org.nterlearning.datamodel.catalog.model.impl.FeedReferenceModelImpl
 * @generated
 */
public interface FeedReferenceModel extends BaseModel<FeedReference> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a feed reference model instance should use the {@link FeedReference} interface instead.
     */

    /**
     * Returns the primary key of this feed reference.
     *
     * @return the primary key of this feed reference
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this feed reference.
     *
     * @param primaryKey the primary key of this feed reference
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the feed reference ID of this feed reference.
     *
     * @return the feed reference ID of this feed reference
     */
    public long getFeedReferenceId();

    /**
     * Sets the feed reference ID of this feed reference.
     *
     * @param feedReferenceId the feed reference ID of this feed reference
     */
    public void setFeedReferenceId(long feedReferenceId);

    /**
     * Returns the company ID of this feed reference.
     *
     * @return the company ID of this feed reference
     */
    public long getCompanyId();

    /**
     * Sets the company ID of this feed reference.
     *
     * @param companyId the company ID of this feed reference
     */
    public void setCompanyId(long companyId);

    /**
     * Returns the group ID of this feed reference.
     *
     * @return the group ID of this feed reference
     */
    public long getGroupId();

    /**
     * Sets the group ID of this feed reference.
     *
     * @param groupId the group ID of this feed reference
     */
    public void setGroupId(long groupId);

    /**
     * Returns the content provider ID of this feed reference.
     *
     * @return the content provider ID of this feed reference
     */
    @AutoEscape
    public String getContentProviderId();

    /**
     * Sets the content provider ID of this feed reference.
     *
     * @param contentProviderId the content provider ID of this feed reference
     */
    public void setContentProviderId(String contentProviderId);

    /**
     * Returns the href of this feed reference.
     *
     * @return the href of this feed reference
     */
    @AutoEscape
    public String getHref();

    /**
     * Sets the href of this feed reference.
     *
     * @param href the href of this feed reference
     */
    public void setHref(String href);

    /**
     * Returns the href hash of this feed reference.
     *
     * @return the href hash of this feed reference
     */
    @AutoEscape
    public String getHrefHash();

    /**
     * Sets the href hash of this feed reference.
     *
     * @param hrefHash the href hash of this feed reference
     */
    public void setHrefHash(String hrefHash);

    /**
     * Returns the pshb of this feed reference.
     *
     * @return the pshb of this feed reference
     */
    @AutoEscape
    public String getPshb();

    /**
     * Sets the pshb of this feed reference.
     *
     * @param pshb the pshb of this feed reference
     */
    public void setPshb(String pshb);

    /**
     * Returns the pshb subscribed of this feed reference.
     *
     * @return the pshb subscribed of this feed reference
     */
    public boolean getPshbSubscribed();

    /**
     * Returns <code>true</code> if this feed reference is pshb subscribed.
     *
     * @return <code>true</code> if this feed reference is pshb subscribed; <code>false</code> otherwise
     */
    public boolean isPshbSubscribed();

    /**
     * Sets whether this feed reference is pshb subscribed.
     *
     * @param pshbSubscribed the pshb subscribed of this feed reference
     */
    public void setPshbSubscribed(boolean pshbSubscribed);

    /**
     * Returns the feed iri of this feed reference.
     *
     * @return the feed iri of this feed reference
     */
    @AutoEscape
    public String getFeedIri();

    /**
     * Sets the feed iri of this feed reference.
     *
     * @param feedIri the feed iri of this feed reference
     */
    public void setFeedIri(String feedIri);

    /**
     * Returns the feed type of this feed reference.
     *
     * @return the feed type of this feed reference
     */
    @AutoEscape
    public String getFeedType();

    /**
     * Sets the feed type of this feed reference.
     *
     * @param feedType the feed type of this feed reference
     */
    public void setFeedType(String feedType);

    /**
     * Returns the feed version of this feed reference.
     *
     * @return the feed version of this feed reference
     */
    @AutoEscape
    public String getFeedVersion();

    /**
     * Sets the feed version of this feed reference.
     *
     * @param feedVersion the feed version of this feed reference
     */
    public void setFeedVersion(String feedVersion);

    /**
     * Returns the trustworthy weight of this feed reference.
     *
     * @return the trustworthy weight of this feed reference
     */
    public double getTrustworthyWeight();

    /**
     * Sets the trustworthy weight of this feed reference.
     *
     * @param trustworthyWeight the trustworthy weight of this feed reference
     */
    public void setTrustworthyWeight(double trustworthyWeight);

    /**
     * Returns the create date of this feed reference.
     *
     * @return the create date of this feed reference
     */
    public Date getCreateDate();

    /**
     * Sets the create date of this feed reference.
     *
     * @param createDate the create date of this feed reference
     */
    public void setCreateDate(Date createDate);

    /**
     * Returns the removed of this feed reference.
     *
     * @return the removed of this feed reference
     */
    public boolean getRemoved();

    /**
     * Returns <code>true</code> if this feed reference is removed.
     *
     * @return <code>true</code> if this feed reference is removed; <code>false</code> otherwise
     */
    public boolean isRemoved();

    /**
     * Sets whether this feed reference is removed.
     *
     * @param removed the removed of this feed reference
     */
    public void setRemoved(boolean removed);

    /**
     * Returns the removed date of this feed reference.
     *
     * @return the removed date of this feed reference
     */
    public Date getRemovedDate();

    /**
     * Sets the removed date of this feed reference.
     *
     * @param removedDate the removed date of this feed reference
     */
    public void setRemovedDate(Date removedDate);

    /**
     * Returns the removed reason of this feed reference.
     *
     * @return the removed reason of this feed reference
     */
    @AutoEscape
    public String getRemovedReason();

    /**
     * Sets the removed reason of this feed reference.
     *
     * @param removedReason the removed reason of this feed reference
     */
    public void setRemovedReason(String removedReason);

    /**
     * Returns the sync date of this feed reference.
     *
     * @return the sync date of this feed reference
     */
    public Date getSyncDate();

    /**
     * Sets the sync date of this feed reference.
     *
     * @param syncDate the sync date of this feed reference
     */
    public void setSyncDate(Date syncDate);

    /**
     * Returns the sync success of this feed reference.
     *
     * @return the sync success of this feed reference
     */
    public boolean getSyncSuccess();

    /**
     * Returns <code>true</code> if this feed reference is sync success.
     *
     * @return <code>true</code> if this feed reference is sync success; <code>false</code> otherwise
     */
    public boolean isSyncSuccess();

    /**
     * Sets whether this feed reference is sync success.
     *
     * @param syncSuccess the sync success of this feed reference
     */
    public void setSyncSuccess(boolean syncSuccess);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(FeedReference feedReference);

    public int hashCode();

    public CacheModel<FeedReference> toCacheModel();

    public FeedReference toEscapedModel();

    public String toString();

    public String toXmlString();
}
